unit Mainmenu;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Imaging.pngimage, Vcl.ExtCtrls,
  Vcl.StdCtrls, Data.DB, Data.Win.ADODB, Vcl.ComCtrls;

type
  TfrmMainmenu = class(TForm)
    imgAdminOptions: TImage;
    imgSettings: TImage;
    imgLogout: TImage;
    lblMainMenu: TLabel;
    lblLogout: TLabel;
    lblAdminOptions: TLabel;
    lblSettings: TLabel;
    shpProfilePic: TShape;
    imgProfilePic: TImage;
    lblUsername: TLabel;
    adotblUsers: TADOTable;
    adoqryUsers: TADOQuery;
    lblScore: TLabel;
    lblDailyStreak: TLabel;
    lblLastLogin: TLabel;
    timerClock: TTimer;
    lblTime: TLabel;
    lblDate: TLabel;
    pnlMain: TPanel;
    imgLvl1: TImage;
    imgLvl2: TImage;
    imgLvl3: TImage;
    imgLvl9: TImage;
    imgLvl10: TImage;
    imgLvl11: TImage;
    imgLvl4: TImage;
    imgLvl12: TImage;
    imgLvl5: TImage;
    imgLvl6: TImage;
    imgLvl7: TImage;
    imgLvl8: TImage;
    pb1: TProgressBar;
    pb2: TProgressBar;
    pb3: TProgressBar;
    pb4: TProgressBar;
    pb5: TProgressBar;
    pb6: TProgressBar;
    pb7: TProgressBar;
    pb8: TProgressBar;
    pb9: TProgressBar;
    pb10: TProgressBar;
    pb11: TProgressBar;
    pb12: TProgressBar;
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure imgAdminOptionsClick(Sender: TObject);
    procedure imgLogoutClick(Sender: TObject);
    procedure imgSettingsClick(Sender: TObject);
    procedure timerClockTimer(Sender: TObject);
    procedure imgLvl1Click(Sender: TObject);
    procedure imgLvl2Click(Sender: TObject);
    procedure imgLvl3Click(Sender: TObject);
    procedure imgLvl4Click(Sender: TObject);
    procedure imgLvl5Click(Sender: TObject);
    procedure imgLvl6Click(Sender: TObject);
    procedure imgLvl7Click(Sender: TObject);
    procedure imgLvl8Click(Sender: TObject);
    procedure imgLvl9Click(Sender: TObject);
    procedure imgLvl10Click(Sender: TObject);
    procedure imgLvl11Click(Sender: TObject);
    procedure imgLvl12Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmMainmenu: TfrmMainmenu;
  CurrentDir: string;
  ImageDir: string;
  UserProgress: array [1 .. 12] of integer;

implementation

{$R *.dfm}

uses
  Login, Globalsetup, AdminOptions, Settings, Error, Level;

procedure TfrmMainmenu.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  frmLogin.Show;
end;

procedure TfrmMainmenu.FormCreate(Sender: TObject);
begin
  frmMainmenu.Scaled := true;
  frmMainmenu.Position := poscreencenter;
end;

procedure TfrmMainmenu.FormShow(Sender: TObject);
var
  i, x: integer;
  pb: TProgressBar;
begin
  // Display admin options to the user if they have administrator rights
  case globalpasslevel of
    0:
      begin
        imgAdminOptions.Visible := false;
        lblAdminOptions.Visible := false;
      end;
    1:
      begin
        frmMainmenu.Caption := 'Spaggy''s Spelling (Admin)';
        imgAdminOptions.Visible := true;
        lblAdminOptions.Visible := true;
      end;
  end;
  with adoqryUsers do
  begin
    Active := false;
    ConnectionString := globalconnectionstring;
    SQL.Clear;
    // Run SQL to gather all fields linked to the username
    SQL.Add('Select * from tblUsers where Username = "' +
      globalusername + '";');
    Active := true;
    // Set focus to the record
    First;
    CurrentDir := GetCurrentDir;
    // Set image directory (contained within program folder) from main program directory
    // (SizeOf(Pointer)*8) returns the windows platform at runtime (x86/x64)
    ImageDir := StringReplace(CurrentDir, 'Win' + (inttostr(SizeOf(Pointer) * 8)
      ) + '\Debug', 'Profile Pictures\', [rfIgnoreCase]);
    // Load the user's profile picture to imgProfilePic
    imgProfilePic.Picture.LoadFromFile
      (ImageDir + adoqryUsers['ProfilePicture']);
    // Load the user's profile info and display within corresponding labels
    lblScore.Caption := 'Score: ' + floattostr(adoqryUsers['Score']);
    lblDailyStreak.Caption := 'Daily Streak: ' +
      floattostr(adoqryUsers['DailyStreak']);
    lblLastLogin.Caption := 'Last Login: ' +
      datetostr(adoqryUsers['LastLogin']);
    // Store user's level progress to local array
    for i := 1 to 12 do
      UserProgress[i] := FieldByName('Level' + inttostr(i)).AsInteger;
  end;
  lblUsername.Caption := globalusername;
  for x := 1 to 2 do
    // Set positions for each progress bar in the main menu according to level progress
    for i := 1 to 12 do
    begin
      pb := TProgressBar(frmMainmenu.FindComponent('pb' + inttostr(i)));
      pb.Position := trunc((UserProgress[i] / LexiconSize[i]) * 100);
      // Set progress bar colour to green if full (completed level)
      if pb.Position = 100 then
        pb.State := pbsNormal;
    end;
end;

procedure TfrmMainmenu.imgAdminOptionsClick(Sender: TObject);
begin
  frmAdminoptions.Show;
  frmMainmenu.Hide;
end;

procedure TfrmMainmenu.imgLogoutClick(Sender: TObject);
begin
  frmLogin.Show;
  frmMainmenu.Hide;
end;

procedure TfrmMainmenu.imgLvl10Click(Sender: TObject);
begin
  // Grant access to level if incomplete and previous level has been partially complete
  if ((pb9.Position > 10) and (pb10.Position < 100)) then
  begin
    setglobalgamelevel(10);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl11Click(Sender: TObject);
begin
  if ((pb10.Position > 10) and (pb11.Position < 100)) then
  begin
    setglobalgamelevel(11);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl12Click(Sender: TObject);
begin
  if ((pb11.Position > 10) and (pb12.Position < 100)) then
  begin
    setglobalgamelevel(12);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl1Click(Sender: TObject);
begin
  if pb1.Position < 100 then
  begin
    setglobalgamelevel(1);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl2Click(Sender: TObject);
begin
  if ((pb1.Position > 10) and (pb2.Position < 100)) then
  begin
    setglobalgamelevel(2);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl3Click(Sender: TObject);
begin
  if ((pb2.Position > 10) and (pb3.Position < 100)) then
  begin
    setglobalgamelevel(3);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl4Click(Sender: TObject);
begin
  if ((pb3.Position > 10) and (pb4.Position < 100)) then
  begin
    setglobalgamelevel(4);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl5Click(Sender: TObject);
begin
  if ((pb4.Position > 10) and (pb5.Position < 100)) then
  begin
    setglobalgamelevel(5);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl6Click(Sender: TObject);
begin
  if ((pb5.Position > 10) and (pb6.Position < 100)) then
  begin
    setglobalgamelevel(6);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl7Click(Sender: TObject);
begin
  if ((pb6.Position > 10) and (pb7.Position < 100)) then
  begin
    setglobalgamelevel(7);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl8Click(Sender: TObject);
begin
  if ((pb7.Position > 10) and (pb8.Position < 100)) then
  begin
    setglobalgamelevel(8);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgLvl9Click(Sender: TObject);
begin
  if ((pb8.Position > 10) and (pb9.Position < 100)) then
  begin
    setglobalgamelevel(9);
    frmLevel.Show;
    frmMainmenu.Hide;
  end
  else
    showmessage('Level is locked. Try playing a previous level.');
end;

procedure TfrmMainmenu.imgSettingsClick(Sender: TObject);
begin
  frmSettings.Show;
  frmMainmenu.Hide;
end;

procedure TfrmMainmenu.timerClockTimer(Sender: TObject);
begin
  // Display time and date
  lblTime.Caption := timetostr(Time);
  lblDate.Caption := datetostr(Date);
end;

end.
